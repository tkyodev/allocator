module Allocation.Confluence exposing (..)

import Http
import Json.Decode
import Json.Encode
import Url


type alias ConfluenceData =
    { pageTitle : String
    , spaceKey : String
    , pageId : String
    , spaceName : String
    , pageVersion : String
    , parentPageId : String
    , contentType : String
    , dataMacroId : String
    }


createApiUrl : { a | pageId : String } -> Url.Url -> Url.Url
createApiUrl { pageId } url =
    if String.contains "confluence" url.host then
        { url
            | path = "/confluence/rest/api/content/" ++ pageId
            , query = Just "status=current"
        }

    else
        url


request :
    { confluenceData : ConfluenceData
    , content : String
    , msgResponse : Result Http.Error String -> msg
    , url : Url.Url
    , savedCounter : Int
    }
    -> Cmd msg
request args =
    Http.request
        { method = "PUT"
        , headers = []
        , url = Url.toString <| createApiUrl args.confluenceData args.url
        , body =
            Http.jsonBody
                (encodeConfluence
                    (buildConfluenceObject
                        { content = args.content
                        , pageId = args.confluenceData.pageId
                        , pageTitle = args.confluenceData.pageTitle
                        , pageVersion =
                            String.toInt args.confluenceData.pageVersion
                                |> Maybe.withDefault 0
                                |> (+) args.savedCounter
                        , parentPageId = args.confluenceData.parentPageId
                        , spaceKey = args.confluenceData.spaceKey
                        , dataMacroId = args.confluenceData.dataMacroId
                        }
                    )
                )
        , expect = Http.expectString args.msgResponse
        , timeout = Nothing
        , tracker = Nothing
        }


buildConfluenceObject :
    { content : String
    , pageId : String
    , pageTitle : String
    , pageVersion : Int
    , parentPageId : String
    , spaceKey : String
    , dataMacroId : String
    }
    -> Confluence
buildConfluenceObject args =
    { ancestors =
        [ { id = args.parentPageId
          , type_ = "page"
          }
        ]
    , body =
        { editor =
            { content =
                { id = args.pageId
                }
            , representation = "editor"
            , value =
                value
                    |> String.replace "{{CONTENT}}" (escapeHtml args.content)
                    |> String.replace "{{DATA_MACRO_ID}}" args.dataMacroId
            }
        }
    , id = args.pageId
    , space =
        { key = args.spaceKey
        }
    , status = "current"
    , title = args.pageTitle
    , type_ = "page"
    , version =
        { message = ""
        , minorEdit = True
        , number = args.pageVersion + 1
        , syncRev = "dummy-sync-rev"
        }
    }


value : String
value =
    "<table class=\"wysiwyg-macro\" data-macro-name=\"html\" data-macro-id=\"{{DATA_MACRO_ID}}\" data-macro-schema-version=\"1\" data-macro-body-type=\"PLAIN_TEXT\" data-mce-resize=\"false\"><tbody><tr><td class=\"wysiwyg-macro-body\"><pre>{{CONTENT}}</pre></td></tr></tbody></table>"


escapeHtml : String -> String
escapeHtml str =
    str
        |> String.replace "'" "&#39;"
        |> String.replace "\"" "&quot;"
        |> String.replace ">" "&gt;"
        |> String.replace "<" "&lt;"
        |> String.replace "&" "&amp;"



-- Created with https://korban.net/elm/json2elm/ using
-- the payload of the PUT request generated by
-- Confluence as reference.


type alias Confluence =
    { ancestors : List ConfluenceAncestorsObject
    , body : ConfluenceBody
    , id : String
    , space : ConfluenceSpace
    , status : String
    , title : String
    , type_ : String
    , version : ConfluenceVersion
    }


type alias ConfluenceAncestorsObject =
    { id : String
    , type_ : String
    }


type alias ConfluenceBody =
    { editor : ConfluenceBodyEditor
    }


type alias ConfluenceBodyEditor =
    { content : ConfluenceBodyEditorContent
    , representation : String
    , value : String
    }


type alias ConfluenceBodyEditorContent =
    { id : String
    }


type alias ConfluenceSpace =
    { key : String
    }


type alias ConfluenceVersion =
    { message : String
    , minorEdit : Bool
    , number : Int
    , syncRev : String
    }


decodeConfluence : Json.Decode.Decoder Confluence
decodeConfluence =
    Json.Decode.map8 Confluence
        (Json.Decode.field "ancestors" <| Json.Decode.list decodeConfluenceAncestorsObject)
        (Json.Decode.field "body" decodeConfluenceBody)
        (Json.Decode.field "id" Json.Decode.string)
        (Json.Decode.field "space" decodeConfluenceSpace)
        (Json.Decode.field "status" Json.Decode.string)
        (Json.Decode.field "title" Json.Decode.string)
        (Json.Decode.field "type" Json.Decode.string)
        (Json.Decode.field "version" decodeConfluenceVersion)


decodeConfluenceAncestorsObject : Json.Decode.Decoder ConfluenceAncestorsObject
decodeConfluenceAncestorsObject =
    Json.Decode.map2 ConfluenceAncestorsObject
        (Json.Decode.field "id" Json.Decode.string)
        (Json.Decode.field "type" Json.Decode.string)


decodeConfluenceBody : Json.Decode.Decoder ConfluenceBody
decodeConfluenceBody =
    Json.Decode.map ConfluenceBody
        (Json.Decode.field "editor" decodeConfluenceBodyEditor)


decodeConfluenceBodyEditor : Json.Decode.Decoder ConfluenceBodyEditor
decodeConfluenceBodyEditor =
    Json.Decode.map3 ConfluenceBodyEditor
        (Json.Decode.field "content" decodeConfluenceBodyEditorContent)
        (Json.Decode.field "representation" Json.Decode.string)
        (Json.Decode.field "value" Json.Decode.string)


decodeConfluenceBodyEditorContent : Json.Decode.Decoder ConfluenceBodyEditorContent
decodeConfluenceBodyEditorContent =
    Json.Decode.map ConfluenceBodyEditorContent
        (Json.Decode.field "id" Json.Decode.string)


decodeConfluenceSpace : Json.Decode.Decoder ConfluenceSpace
decodeConfluenceSpace =
    Json.Decode.map ConfluenceSpace
        (Json.Decode.field "key" Json.Decode.string)


decodeConfluenceVersion : Json.Decode.Decoder ConfluenceVersion
decodeConfluenceVersion =
    Json.Decode.map4 ConfluenceVersion
        (Json.Decode.field "message" Json.Decode.string)
        (Json.Decode.field "minorEdit" Json.Decode.bool)
        (Json.Decode.field "number" Json.Decode.int)
        (Json.Decode.field "syncRev" Json.Decode.string)


encodeConfluence : Confluence -> Json.Encode.Value
encodeConfluence confluence =
    Json.Encode.object
        [ ( "ancestors", Json.Encode.list encodeConfluenceAncestorsObject confluence.ancestors )
        , ( "body", encodeConfluenceBody confluence.body )
        , ( "id", Json.Encode.string confluence.id )
        , ( "space", encodeConfluenceSpace confluence.space )
        , ( "status", Json.Encode.string confluence.status )
        , ( "title", Json.Encode.string confluence.title )
        , ( "type", Json.Encode.string confluence.type_ )
        , ( "version", encodeConfluenceVersion confluence.version )
        ]


encodeConfluenceAncestorsObject : ConfluenceAncestorsObject -> Json.Encode.Value
encodeConfluenceAncestorsObject confluenceAncestorsObject =
    Json.Encode.object
        [ ( "id", Json.Encode.string confluenceAncestorsObject.id )
        , ( "type", Json.Encode.string confluenceAncestorsObject.type_ )
        ]


encodeConfluenceBody : ConfluenceBody -> Json.Encode.Value
encodeConfluenceBody confluenceBody =
    Json.Encode.object
        [ ( "editor", encodeConfluenceBodyEditor confluenceBody.editor )
        ]


encodeConfluenceBodyEditor : ConfluenceBodyEditor -> Json.Encode.Value
encodeConfluenceBodyEditor confluenceBodyEditor =
    Json.Encode.object
        [ ( "content", encodeConfluenceBodyEditorContent confluenceBodyEditor.content )
        , ( "representation", Json.Encode.string confluenceBodyEditor.representation )
        , ( "value", Json.Encode.string confluenceBodyEditor.value )
        ]


encodeConfluenceBodyEditorContent : ConfluenceBodyEditorContent -> Json.Encode.Value
encodeConfluenceBodyEditorContent confluenceBodyEditorContent =
    Json.Encode.object
        [ ( "id", Json.Encode.string confluenceBodyEditorContent.id )
        ]


encodeConfluenceSpace : ConfluenceSpace -> Json.Encode.Value
encodeConfluenceSpace confluenceSpace =
    Json.Encode.object
        [ ( "key", Json.Encode.string confluenceSpace.key )
        ]


encodeConfluenceVersion : ConfluenceVersion -> Json.Encode.Value
encodeConfluenceVersion confluenceVersion =
    Json.Encode.object
        [ ( "message", Json.Encode.string confluenceVersion.message )
        , ( "minorEdit", Json.Encode.bool confluenceVersion.minorEdit )
        , ( "number", Json.Encode.int confluenceVersion.number )
        , ( "syncRev", Json.Encode.string confluenceVersion.syncRev )
        ]
